<?php
	namespace Me\Korolevsky\BonchBot\Commands;

	use RedBeanPHP\R;
	use Me\Korolevsky\BonchBot\LK;
	use Me\Korolevsky\BonchBot\Api;
	use Me\Korolevsky\BonchBot\Interfaces\Command;

	class Marks implements Command {

		public function __construct(Api $api, array $object) {
			$vkApi = $api->getVkApi();
			$payload = (array) $object['payload'];

			if($object['from_id'] == null) {
				$object['from_id'] = $object['user_id'];
			}

			if($object['peer_id'] > 2000000000) {
				$vkApi->sendMessage("‚öôÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –í–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.", [
					'keyboard' => '{"buttons":[[{"action":{"type":"open_link","link":"https://vk.com/im?sel=-207206992","label":"–ü–µ—Ä–µ–π—Ç–∏ –≤ –õ–° –ë–æ—Ç–∞","payload":""}}]],"inline":true}'
				]);

				$forward = [];
				$object['peer_id'] = $object['from_id'];
			} else {
				$forward = [ 'is_reply' => true, 'peer_id' => $object['peer_id'], 'conversation_message_ids' => [$object['conversation_message_id']]];
			}

			$user = R::findOne('users', 'WHERE `user_id` = ?', [ $object['from_id'] ]);
			if($user == null) {
				$vkApi->sendMessage("üìõ –£ –í–∞—Å –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç –õ–ö.", [
					'keyboard' => '{"buttons":[[{"action":{"type":"text","label":"–ü—Ä–∏–≤—è–∑–∞—Ç—å","payload":"{ \"command\": \"eval\", \"cmd\": \"/bind\" }"},"color":"secondary"}]],"inline":true}',
					'peer_id' => $object['peer_id'],
					'forward' => $forward
				]);
				return false;
			}

			if($payload['update'] == null) {
				$conversation_message_id = $vkApi->sendMessage("üìò –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ –õ–ö...", [
						'peer_ids' => $object['peer_id'],
						'forward' => $forward
					]
				)[0]['conversation_message_id'];
			} else {
				$conversation_message_id = $payload['update'];
				$vkApi->editMessage("üìò –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ –õ–ö...", $conversation_message_id, $object['peer_id']);
			}

			$lk = new LK($object['from_id']);
			if($lk->auth() != 1) {
				$vkApi->editMessage("", $conversation_message_id, $object['peer_id']);
				return true;
			}

			$marksLK = $lk->getOnlyMarks();
			if(($marksLK['well']+$marksLK['good']) < 1 || ($marksLK['not_bad']+$marksLK['bad']) < 1) { // –ï—Å–ª–∏ –æ–¥–Ω–∞ –∏–∑ —Å—É–º–º —á–∏—Å–µ–ª 0, —Ç–æ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–º —Å—á–∏—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ–º
				$text = "üéì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –æ—Ü–µ–Ω–∫–∞–º –Ω–∞ –¥–∞–Ω–Ω—ã–π —Å–µ–º–µ—Å—Ç—Ä:\n\nüöî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤: ${marksLK['pass']}\n‚òÄÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫ (5/4/3/2): ${marksLK['well']}/${marksLK['good']}/${marksLK['not_bad']}/${marksLK['bad']}.";
			} else {
				$percent = [
					round(($marksLK['well']+$marksLK['good'])/($marksLK['well']+$marksLK['good']+$marksLK['not_bad']+$marksLK['bad'])*100, 1),
					round(($marksLK['not_bad']+$marksLK['bad'])/($marksLK['well']+$marksLK['good']+$marksLK['not_bad']+$marksLK['bad'])*100, 1)
				];

				$text = "üéì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –æ—Ü–µ–Ω–∫–∞–º –Ω–∞ –¥–∞–Ω–Ω—ã–π —Å–µ–º–µ—Å—Ç—Ä:\n\nüöî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤: ${marksLK['pass']}\n‚òÄÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–æ–∫ (5/4/3/2): ${marksLK['well']}/${marksLK['good']}/${marksLK['not_bad']}/${marksLK['bad']}\nüß† –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ö–æ—Ä–æ—à–∏—Ö –∏ –ø–ª–æ—Ö–∏—Ö –æ—Ü–µ–Ω–æ–∫: ${percent[0]}% –Ω–∞ ${percent[1]}%.";
			}

			$vkApi->editMessage($text, $conversation_message_id, $object['peer_id'], [ 'keyboard' => '{"buttons":[[{"action":{"type":"callback","label":"–ü–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ü–µ–Ω–æ–∫","payload":"{ \"command\": \"screen_marks\", \"for\": '.$object['from_id'].', \"update\": '.$conversation_message_id.' }"},"color":"positive"}]],"inline":true}' ]);
			return true;
		}

	}